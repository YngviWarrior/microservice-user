services:
  db: 
    image: mysql:latest
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./botMysql:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    networks:
      - bot-network
    ports:
    - "3307:3306"
  redis: 
    image: redis:latest
    container_name: redis
    restart: always
    tty: true
    networks:
      - bot-network
    ports:
    - "6379:6379"

  bot-engine:
    # build: 
    #     context: ./bot-engine
    #     dockerfile: dockerfile
    image: yngviwarrior/bot-engine
    container_name: bot-engine
    volumes:
      - ./bot-engine:/app
    depends_on:
      - redis
      - db
      - ms-user
      - ms-exchange
    ports:
      - "3000:3000"
    networks:
      - bot-network
  ms-exchange:
    # build: 
    #     context: ./microservice-exchange
    #     dockerfile: dockerfile
    image: yngviwarrior/ms-exchange
    container_name: ms-exchange
    volumes:
      - ./microservice-exchange:/app
    depends_on:
      - redis
      - db
      - ms-user
    ports:
      - "3001:3001"
    networks:
      - bot-network
  ms-user:
    # build: 
    #     context: ./microservice-user
    #     dockerfile: dockerfile
    image: yngviwarrior/ms-user
    container_name: ms-user
    volumes:
      - ./microservice-user:/app
    depends_on:
      - db
    ports:
      - "3002:3002"
    networks:
      - bot-network


networks:
  bot-network:
    driver: bridge